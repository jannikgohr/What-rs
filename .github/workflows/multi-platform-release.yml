name: Rust CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy

      - name: Build the project
        run: cargo build --release

      - name: Run tests
        run: cargo test --verbose

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: What-rs-${{ matrix.os }}
          path: ${{ matrix.os == 'windows-latest' && 'target/release/What-rs.exe' || 'target/release/What-rs' }}

  release:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: What-rs-${{ matrix.os }}
          path: release

      - name: Copy data directory
        run: cp -r data release/

      - name: Rename binary for consistency (Windows only)
        if: matrix.os == 'windows-latest'
        run: |
          cd release
          mv What-rs.exe What-rs
        shell: bash

      - name: Create release archive (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd release
          7z a ../What-rs-${{ github.ref_name }}-windows.zip .
        shell: bash

      - name: Create release archive (Linux & macOS)
        if: matrix.os != 'windows-latest'
        run: |
          cd release
          tar -czvf ../What-rs-${{ github.ref_name }}-${{ matrix.os }}.tar.gz .
        shell: bash

      - name: Upload release artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./What-rs-${{ github.ref_name }}-windows.zip
          asset_name: What-rs-${{ github.ref_name }}-windows.zip
          label: "What-rs for Windows"

      - name: Upload release artifact (Linux & macOS)
        if: matrix.os != 'windows-latest'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./What-rs-${{ github.ref_name }}-${{ matrix.os }}.tar.gz
          asset_name: What-rs-${{ github.ref_name }}-${{ matrix.os }}.tar.gz
          label: "What-rs for ${{ matrix.os }}"
